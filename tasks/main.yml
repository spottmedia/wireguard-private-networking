---
- name: Add wireguard ppa (Ubuntu)
  apt_repository:
    repo: 'ppa:wireguard/wireguard'
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_major_version|int < 20

- name: Install linux headers (Ubuntu)
  apt:
    update_cache: yes
    state: present
    name: linux-headers-generic
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_major_version|int < 20

- name: Add unstable repository (Debian)
  copy:
    src: templates/unstable.list
    dest: /etc/apt/sources.list.d/unstable.list
  when:
    - ansible_distribution == "Debian" and debian_enable_testing

- name: Pin packages (Debian)
  copy:
    src: templates/limit-unstable
    dest: /etc/apt/preferences.d/limit-unstable
  when:
    - ansible_distribution == "Debian" and debian_pin_packages

- name: Get kernel version (Debian)
  command: uname -r
  register: kernel
  when:
    - ansible_distribution == "Debian"

- name: Install kernel headers (Debian)
  apt:
    state: present
    update_cache: true
    name: linux-headers-{{ kernel.stdout }}
  when:
    - ansible_distribution == "Debian"

- name: Install wireguard (apt)
  apt:
    update_cache: yes
    state: present
    name: wireguard
  when:
    - ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
    
- name: Hold version of wireguard packages (if needed)
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items: 
    - wireguard
    - wireguard-dkms
  when:
    - ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
    - wireguard_hold_selection

- name: Install wireguard (pacman)
  pacman:
    name:
      - wireguard-dkms
      - wireguard-tools
    state: present
  when:
    - ansible_distribution == "Archlinux"

- name: Install wireguard (CentOS 8)
  block:
    - name: Install wireguard (CentOS 8)
      dnf:
        name:
          - elrepo-release
          - epel-release
        state: present

    - dnf:
        name:
          - kmod-wireguard
          - wireguard-tools
        state: present

    - file:
        path: "{{ wireguard_path }}"
        state: directory
        mode: u=rwx,g=,o=
        group: root

  when: ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "8"

- name: Install wireguard (CentOS 7)
  block:
    - name: Install wireguard (CentOS 7)
      yum:
        name:
          - epel-release
          - https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm
        state: present

    - yum:
        name:
          - yum-plugin-elrepo
        state: present

    - yum:
        name:
          - kmod-wireguard
          - wireguard-tools
        state: present

    - file:
        path: "{{ wireguard_path }}"
        state: directory
        mode: u=rwx,g=,o=
        group: root

  when: ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7"

- name: Read private key
  stat:
    path: "{{ wireguard_path }}/privatekey"
  register: privatekey

- name: Generate wireguard keys
  shell: "umask 077; wg genkey | tee {{ wireguard_path  }}/privatekey | wg pubkey > {{ wireguard_path }}/publickey"
  when: not privatekey.stat.exists

- name: Read private key
  slurp:
    src: "{{ wireguard_path }}/privatekey"
  register: private

- name: Read public key
  slurp:
    src: "{{ wireguard_path }}/publickey"
  register: public

- name: Read private client's key
  stat:
    path: "{{ wireguard_path }}/client_privatekey"
  register: client_privatekey
  run_once: true
  when: client_vpn_ip | length > 0

- name: Generate wireguard client's keys
  shell: "umask 077; wg genkey | tee {{ wireguard_path  }}/client_privatekey | wg pubkey > {{ wireguard_path }}/client_publickey"
  run_once: true
  when:
    - client_vpn_ip | length > 0
    - not client_privatekey.stat.exists

- name: Read private client's key
  slurp:
    src: "{{ wireguard_path }}/client_privatekey"
  register: client_privatekey
  run_once: true
  when: client_vpn_ip | length > 0

- name: Read public client's key
  slurp:
    src: "{{ wireguard_path }}/client_publickey"
  register: client_publickey
  run_once: true
  when: client_vpn_ip | length > 0

- name: Generate configs
  template:
    src: interface.conf.j2
    dest: "{{ wireguard_path }}/{{ wireguard_network_name }}.conf"
    owner: root
    group: root
    mode: "u=rw,g=r,o="
  register: config

- name: Generate client's config
  template:
    src: client.conf.j2
    dest: "{{ client_wireguard_path }}"
    mode: "u=rw,g=,o="
  vars:
    ansible_connection: local
  become: no
  run_once: true
  when: client_vpn_ip | length > 0
  delegate_to: localhost

- name: Start and enable wg-quick systemd service
  systemd:
    name: "wg-quick@{{ wireguard_network_name }}"
    enabled: yes
    state: started

- name: Restart wg-quick service if required
  systemd:
    name: "wg-quick@{{ wireguard_network_name }}"
    state: restarted
  when: config.changed and not wireguard_skip_restart


- name: add nodes to /etc/hosts (ansible_inventory resolves to vpn_ip)
  lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].vpn_ip }} {{item}}" state=present
  when: hostvars[item].vpn_ip is defined
  with_items: "{{ play_hosts }}"
